generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 Int                 @id @default(autoincrement())
  nombre             String
  email              String              @unique
  password           String
  estado             String              @default("activo")
  fechaCreacion      DateTime            @default(now())
  ultimaActividad    DateTime?
  esSuperUsuario     Boolean             @default(false)
  acciones           Auditoria[]
  documentosCargados DocumentoProyecto[]
  notasProyecto      NotaProyecto[]
  roles              Rol[]               @relation("UsuarioRoles")
}

model Rol {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique
  descripcion String?
  permisos    Permiso[] @relation("RolPermisos")
  usuarios    Usuario[] @relation("UsuarioRoles")
}

model Permiso {
  id          Int     @id @default(autoincrement())
  nombre      String  @unique
  descripcion String?
  modulo      String
  accion      String
  roles       Rol[]   @relation("RolPermisos")
}

model Auditoria {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  accion    String
  entidad   String
  entidadId String
  detalles  Json?
  fechaHora DateTime @default(now())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
}

model Proyecto {
  id                    Int                          @id @default(autoincrement())
  codigo                String                       @unique
  nombre                String
  descripcion           String?
  ubicacion             String
  fechaInicio           DateTime?
  fechaFinEstimada      DateTime?
  fechaFinReal          DateTime?
  presupuestoTotal      Decimal                      @db.Decimal(12, 2)
  estado                String                       @default("planificacion")
  prioridad             String                       @default("media")
  fechaCreacion         DateTime                     @default(now())
  fechaActualizacion    DateTime                     @updatedAt
  asignacionesEmpleados AsignacionEmpleadoProyecto[]
  documentos            DocumentoProyecto[]
  etapas                EtapaProyecto[]
  notas                 NotaProyecto[]
}

model EtapaProyecto {
  id                       Int                           @id @default(autoincrement())
  nombre                   String
  descripcion              String?
  proyectoId               Int
  orden                    Int
  fechaInicio              DateTime?
  fechaFinEstimada         DateTime?
  fechaFinReal             DateTime?
  presupuesto              Decimal                       @db.Decimal(12, 2)
  estado                   String                        @default("pendiente")
  avance                   Int                           @default(0)
  fechaCreacion            DateTime                      @default(now())
  fechaActualizacion       DateTime                      @updatedAt
  asignacionesEspecialidad AsignacionEspecialidadEtapa[]
  proyecto                 Proyecto                      @relation(fields: [proyectoId], references: [id])
  tareas                   TareaProyecto[]
}

model TareaProyecto {
  id                          Int                           @id @default(autoincrement())
  nombre                      String
  descripcion                 String?
  etapaId                     Int
  orden                       Int
  fechaInicio                 DateTime?
  fechaFinEstimada            DateTime?
  fechaFinReal                DateTime?
  estado                      String                        @default("pendiente")
  prioridad                   String                        @default("media")
  fechaCreacion               DateTime                      @default(now())
  fechaActualizacion          DateTime                      @updatedAt
  asignacionesEmpleados       AsignacionEmpleadoTarea[]
  asignacionEspecialidadTarea AsignacionEspecialidadTarea[] @relation("TareaEspecialidadTarea")
  materialesAsignados         AsignacionMaterial[]
  etapa                       EtapaProyecto                 @relation(fields: [etapaId], references: [id])
}

model DocumentoProyecto {
  id               Int      @id @default(autoincrement())
  proyectoId       Int
  nombre           String
  descripcion      String?
  tipo             String
  urlArchivo       String?  // Ahora es opcional
  contenidoArchivo Bytes?   // Contenido binario del archivo
  extension        String?  // Extensión del archivo (pdf, jpg, etc.)
  mimeType         String?  // Tipo MIME del archivo
  tamano           Int?     // Tamaño del archivo en bytes
  fechaCarga       DateTime @default(now())
  usuarioCargaId   Int
  proyecto         Proyecto @relation(fields: [proyectoId], references: [id])
  usuarioCarga     Usuario  @relation(fields: [usuarioCargaId], references: [id])
}

model NotaProyecto {
  id            Int      @id @default(autoincrement())
  proyectoId    Int
  usuarioId     Int
  contenido     String
  fechaCreacion DateTime @default(now())
  esPrivada     Boolean  @default(false)
  proyecto      Proyecto @relation(fields: [proyectoId], references: [id])
  usuario       Usuario  @relation(fields: [usuarioId], references: [id])
}

model Material {
  id                 Int                  @id @default(autoincrement())
  codigo             String               @unique
  nombre             String
  descripcion        String?
  categoria          String
  unidadMedida       String
  precioReferencia   Decimal              @db.Decimal(12, 2)
  stockMinimo        Decimal?             @db.Decimal(12, 2)
  fechaCreacion      DateTime             @default(now())
  fechaActualizacion DateTime             @updatedAt
  asignaciones       AsignacionMaterial[]
  proveedores        MaterialProveedor[]
}

model Proveedor {
  id                 Int                 @id @default(autoincrement())
  codigo             String              @unique
  nombre             String
  nombreComercial    String?
  tipoDocumento      String
  numeroDocumento    String
  direccion          String?
  ciudad             String?
  codigoPostal       String?
  pais               String?
  telefono           String?
  email              String?
  sitioWeb           String?
  categorias         String[]
  condicionesPago    String?
  descuento          Decimal?            @db.Decimal(5, 2)
  observaciones      String?
  estado             String              @default("activo")
  fechaCreacion      DateTime            @default(now())
  fechaActualizacion DateTime            @updatedAt
  contactos          ContactoProveedor[]
  materiales         MaterialProveedor[]
}

model ContactoProveedor {
  id            Int       @id @default(autoincrement())
  proveedorId   Int
  nombre        String
  cargo         String?
  telefono      String?
  email         String?
  esPrincipal   Boolean   @default(false)
  observaciones String?
  proveedor     Proveedor @relation(fields: [proveedorId], references: [id])
}

model AsignacionMaterial {
  id                 Int           @id @default(autoincrement())
  materialId         Int
  tareaId            Int
  cantidad           Decimal       @db.Decimal(12, 2)
  unidadMedida       String
  estado             String        @default("pendiente")
  observaciones      String?
  fechaAsignacion    DateTime      @default(now())
  fechaActualizacion DateTime      @updatedAt
  material           Material      @relation(fields: [materialId], references: [id])
  tarea              TareaProyecto @relation(fields: [tareaId], references: [id])

  @@unique([materialId, tareaId])
}

model MaterialProveedor {
  id                   Int       @id @default(autoincrement())
  materialId           Int
  proveedorId          Int
  precio               Decimal   @db.Decimal(12, 2)
  unidadMedida         String
  tiempoEntrega        String?
  cantidadMinima       Decimal?  @db.Decimal(12, 2)
  observaciones        String?
  esProveedorPrincipal Boolean   @default(false)
  fechaActualizacion   DateTime  @updatedAt
  fechaCreacion        DateTime  @default(now())
  material             Material  @relation(fields: [materialId], references: [id])
  proveedor            Proveedor @relation(fields: [proveedorId], references: [id])

  @@unique([materialId, proveedorId])
}

model Empleado {
  id                   Int                          @id @default(autoincrement())
  codigo               String                       @unique
  nombre               String
  apellido             String
  tipoDocumento        String
  numeroDocumento      String
  fechaNacimiento      DateTime?
  telefono             String?
  email                String?
  direccion            String?
  ciudad               String?
  codigoPostal         String?
  pais                 String?
  fechaIngreso         DateTime                     @default(now())
  fechaEgreso          DateTime?
  estado               String                       @default("activo")
  observaciones        String?
  gremioId             Int?
  fechaCreacion        DateTime                     @default(now())
  fechaActualizacion   DateTime                     @updatedAt
  asignacionesProyecto AsignacionEmpleadoProyecto[]
  asignacionesTarea    AsignacionEmpleadoTarea[]
  gremio               Gremio?                      @relation(fields: [gremioId], references: [id])
  especialidades       EmpleadoEspecialidad[]

  @@index([codigo])
  @@index([estado])
}

model Especialidad {
  id                          Int                           @id @default(autoincrement())
  codigo                      String                        @unique
  nombre                      String
  descripcion                 String?
  valorHoraBase               Decimal                       @db.Decimal(12, 2)
  fechaCreacion               DateTime                      @default(now())
  fechaActualizacion          DateTime                      @updatedAt
  etapasAsignadas             AsignacionEspecialidadEtapa[]
  asignacionEspecialidadTarea AsignacionEspecialidadTarea[] @relation("EspecialidadTarea")
  empleados                   EmpleadoEspecialidad[]
  gremioEspecialidades        GremioEspecialidad[]          @relation("EspecialidadGremio")
}

model Gremio {
  id                   Int                  @id @default(autoincrement())
  codigo               String               @unique
  nombre               String
  descripcion          String?
  contactoNombre       String?
  contactoTelefono     String?
  contactoEmail        String?
  convenioVigente      String?
  fechaConvenio        DateTime?
  observaciones        String?
  fechaCreacion        DateTime             @default(now())
  fechaActualizacion   DateTime             @updatedAt
  empleados            Empleado[]
  gremioEspecialidades GremioEspecialidad[] @relation("GremioEspecialidadRelation")
}

model EmpleadoEspecialidad {
  id                 Int          @id @default(autoincrement())
  empleadoId         Int
  especialidadId     Int
  valorHora          Decimal      @db.Decimal(12, 2)
  fechaDesde         DateTime     @default(now())
  fechaHasta         DateTime?
  certificaciones    String[]
  nivelExperiencia   String       @default("medio")
  esPrincipal        Boolean      @default(true)
  observaciones      String?
  fechaCreacion      DateTime     @default(now())
  fechaActualizacion DateTime     @updatedAt
  empleado           Empleado     @relation(fields: [empleadoId], references: [id])
  especialidad       Especialidad @relation(fields: [especialidadId], references: [id])

  @@unique([empleadoId, especialidadId, fechaDesde])
  @@index([empleadoId])
  @@index([especialidadId])
}

model AsignacionEmpleadoProyecto {
  id                 Int       @id @default(autoincrement())
  empleadoId         Int
  proyectoId         Int
  rol                String
  fechaAsignacion    DateTime  @default(now())
  fechaDesasignacion DateTime?
  horasDiarias       Decimal   @default(8.00) @db.Decimal(4, 2)
  valorHora          Decimal   @db.Decimal(12, 2)
  activo             Boolean   @default(true)
  observaciones      String?
  fechaCreacion      DateTime  @default(now())
  fechaActualizacion DateTime  @updatedAt
  empleado           Empleado  @relation(fields: [empleadoId], references: [id])
  proyecto           Proyecto  @relation(fields: [proyectoId], references: [id])

  @@unique([empleadoId, proyectoId, fechaAsignacion])
  @@index([empleadoId])
  @@index([proyectoId])
}

model AsignacionEmpleadoTarea {
  id                 Int           @id @default(autoincrement())
  empleadoId         Int
  tareaId            Int
  fechaAsignacion    DateTime      @default(now())
  fechaDesasignacion DateTime?
  horasEstimadas     Decimal       @db.Decimal(6, 2)
  horasRegistradas   Decimal       @default(0) @db.Decimal(6, 2)
  valorHora          Decimal       @db.Decimal(12, 2)
  activo             Boolean       @default(true)
  observaciones      String?
  fechaCreacion      DateTime      @default(now())
  fechaActualizacion DateTime      @updatedAt
  empleado           Empleado      @relation(fields: [empleadoId], references: [id])
  tarea              TareaProyecto @relation(fields: [tareaId], references: [id])

  @@unique([empleadoId, tareaId, fechaAsignacion])
  @@index([empleadoId])
  @@index([tareaId])
}

model AsignacionEspecialidadEtapa {
  id                 Int           @id @default(autoincrement())
  etapaId            Int
  especialidadId     Int
  cantidadRecursos   Int
  horasEstimadas     Decimal       @db.Decimal(8, 2)
  valorHora          Decimal       @db.Decimal(12, 2)
  costoTotal         Decimal       @db.Decimal(12, 2)
  observaciones      String?
  fechaCreacion      DateTime      @default(now())
  fechaActualizacion DateTime      @updatedAt
  especialidad       Especialidad  @relation(fields: [especialidadId], references: [id])
  etapa              EtapaProyecto @relation(fields: [etapaId], references: [id])

  @@unique([etapaId, especialidadId])
  @@index([etapaId])
  @@index([especialidadId])
}

model AsignacionEspecialidadTarea {
  id                 Int           @id @default(autoincrement())
  tareaId            Int
  especialidadId     Int
  cantidadRecursos   Int
  horasEstimadas     Decimal       @db.Decimal(8, 2)
  valorHora          Decimal       @db.Decimal(12, 2)
  costoTotal         Decimal       @db.Decimal(12, 2)
  observaciones      String?
  fechaCreacion      DateTime      @default(now())
  fechaActualizacion DateTime      @updatedAt
  especialidad       Especialidad  @relation("EspecialidadTarea", fields: [especialidadId], references: [id])
  tarea              TareaProyecto @relation("TareaEspecialidadTarea", fields: [tareaId], references: [id])

  @@unique([tareaId, especialidadId])
}

model GremioEspecialidad {
  id             Int          @id @default(autoincrement())
  gremioId       Int
  especialidadId Int
  especialidad   Especialidad @relation("EspecialidadGremio", fields: [especialidadId], references: [id])
  gremio         Gremio       @relation("GremioEspecialidadRelation", fields: [gremioId], references: [id])

  @@unique([gremioId, especialidadId])
}
